return {
  {
    "zbirenbaum/copilot.lua",
    cmd = "Copilot",
    build = ":Copilot auth",
    event = "BufReadPost",
    opts = {
      suggestion = { enabled = false },
      panel = { enabled = false },
      -- suggestion = {
      --   enabled = true,
      --   auto_trigger = true,
      --   hide_during_completion = false,
      --   -- hide_during_completion = vim.g.ai_cmp,
      --   keymap = {
      --     accept = false, -- handled by nvim-cmp / blink.cmp
      --     next = "<M-]>",
      --     prev = "<M-[>",
      --   },
      -- },
      -- panel = { enabled = true },
      -- filetypes = {
      --   markdown = true,
      --   help = true,
      -- },
    },
  },

  {
    "zbirenbaum/copilot-cmp",
    opts = function()
      MyVim.cmp.actions.ai_accept = function()
        if require("copilot.suggestion").is_visible() then
          MyVim.create_undo()
          require("copilot.suggestion").accept()
          return true
        end
      end
    end,
  },

  -- add ai_accept action
  -- {
  --   "zbirenbaum/copilot.lua",
  --   opts = function()
  --     MyVim.cmp.actions.ai_accept = function()
  --       if require("copilot.suggestion").is_visible() then
  --         MyVim.create_undo()
  --         require("copilot.suggestion").accept()
  --         return true
  --       end
  --     end
  --   end,
  -- },
  --
  -- -- copilot cmp source
  -- {
  --   "hrsh7th/nvim-cmp",
  --   optional = true,
  --   dependencies = { -- this will only be evaluated if nvim-cmp is enabled
  --     {
  --       "zbirenbaum/copilot-cmp",
  --       opts = {},
  --       config = function(_, opts)
  --         local copilot_cmp = require("copilot_cmp")
  --         copilot_cmp.setup(opts)
  --         copilot_cmp._on_insert_enter({})
  --         -- attach cmp source whenever copilot attaches
  --         -- fixes lazy-loading issues with the copilot cmp source
  --         -- LazyVim.lsp.on_attach(function()
  --         --     copilot_cmp._on_insert_enter({})
  --         --     end, "copilot")
  --         end,
  --       specs = {
  --         {
  --           "hrsh7th/nvim-cmp",
  --           optional = true,
  --           ---@param opts cmp.ConfigSchema
  --             opts = function(_, opts)
  --             table.insert(opts.sources, 1, {
  --                 name = "copilot",
  --                 group_index = 1,
  --                 priority = 100,
  --                 })
  --           end,
  --         },
  --       },
  --     },
  --   },
  -- },
}
